*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZHR_DES_EQUIPA_V................................*
FORM GET_DATA_ZHR_DES_EQUIPA_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZHR_DES_EQUIPA WHERE
(VIM_WHERETAB) .
    CLEAR ZHR_DES_EQUIPA_V .
ZHR_DES_EQUIPA_V-MANDT =
ZHR_DES_EQUIPA-MANDT .
ZHR_DES_EQUIPA_V-CODIGO =
ZHR_DES_EQUIPA-CODIGO .
ZHR_DES_EQUIPA_V-ENDDA =
ZHR_DES_EQUIPA-ENDDA .
ZHR_DES_EQUIPA_V-BEGDA =
ZHR_DES_EQUIPA-BEGDA .
ZHR_DES_EQUIPA_V-DT_ALTERACAO =
ZHR_DES_EQUIPA-DT_ALTERACAO .
ZHR_DES_EQUIPA_V-TM_ALTERACAO =
ZHR_DES_EQUIPA-TM_ALTERACAO .
ZHR_DES_EQUIPA_V-USR_ALTERACAO =
ZHR_DES_EQUIPA-USR_ALTERACAO .
    SELECT SINGLE * FROM ZHR_DES_EQUIPA_T WHERE
CODIGO = ZHR_DES_EQUIPA-CODIGO AND
ENDDA = ZHR_DES_EQUIPA-ENDDA AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZHR_DES_EQUIPA_V-DESCRICAO =
ZHR_DES_EQUIPA_T-DESCRICAO .
    ENDIF.
<VIM_TOTAL_STRUC> = ZHR_DES_EQUIPA_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZHR_DES_EQUIPA_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZHR_DES_EQUIPA_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZHR_DES_EQUIPA_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZHR_DES_EQUIPA WHERE
  CODIGO = ZHR_DES_EQUIPA_V-CODIGO AND
  ENDDA = ZHR_DES_EQUIPA_V-ENDDA .
    IF SY-SUBRC = 0.
    DELETE ZHR_DES_EQUIPA .
    ENDIF.
    DELETE FROM ZHR_DES_EQUIPA_T WHERE
    CODIGO = ZHR_DES_EQUIPA-CODIGO AND
    ENDDA = ZHR_DES_EQUIPA-ENDDA .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZHR_DES_EQUIPA WHERE
  CODIGO = ZHR_DES_EQUIPA_V-CODIGO AND
  ENDDA = ZHR_DES_EQUIPA_V-ENDDA .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZHR_DES_EQUIPA.
    ENDIF.
ZHR_DES_EQUIPA-MANDT =
ZHR_DES_EQUIPA_V-MANDT .
ZHR_DES_EQUIPA-CODIGO =
ZHR_DES_EQUIPA_V-CODIGO .
ZHR_DES_EQUIPA-ENDDA =
ZHR_DES_EQUIPA_V-ENDDA .
ZHR_DES_EQUIPA-BEGDA =
ZHR_DES_EQUIPA_V-BEGDA .
ZHR_DES_EQUIPA-DT_ALTERACAO =
ZHR_DES_EQUIPA_V-DT_ALTERACAO .
ZHR_DES_EQUIPA-TM_ALTERACAO =
ZHR_DES_EQUIPA_V-TM_ALTERACAO .
ZHR_DES_EQUIPA-USR_ALTERACAO =
ZHR_DES_EQUIPA_V-USR_ALTERACAO .
    IF SY-SUBRC = 0.
    UPDATE ZHR_DES_EQUIPA ##WARN_OK.
    ELSE.
    INSERT ZHR_DES_EQUIPA .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZHR_DES_EQUIPA_T WHERE
    CODIGO = ZHR_DES_EQUIPA-CODIGO AND
    ENDDA = ZHR_DES_EQUIPA-ENDDA AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZHR_DES_EQUIPA_T.
ZHR_DES_EQUIPA_T-CODIGO =
ZHR_DES_EQUIPA-CODIGO .
ZHR_DES_EQUIPA_T-ENDDA =
ZHR_DES_EQUIPA-ENDDA .
ZHR_DES_EQUIPA_T-SPRAS =
SY-LANGU .
      ENDIF.
ZHR_DES_EQUIPA_T-DESCRICAO =
ZHR_DES_EQUIPA_V-DESCRICAO .
    IF SY-SUBRC = 0.
    UPDATE ZHR_DES_EQUIPA_T ##WARN_OK.
    ELSE.
    INSERT ZHR_DES_EQUIPA_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZHR_DES_EQUIPA_V-UPD_FLAG,
STATUS_ZHR_DES_EQUIPA_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZHR_DES_EQUIPA_V.
  SELECT SINGLE * FROM ZHR_DES_EQUIPA WHERE
CODIGO = ZHR_DES_EQUIPA_V-CODIGO AND
ENDDA = ZHR_DES_EQUIPA_V-ENDDA .
ZHR_DES_EQUIPA_V-MANDT =
ZHR_DES_EQUIPA-MANDT .
ZHR_DES_EQUIPA_V-CODIGO =
ZHR_DES_EQUIPA-CODIGO .
ZHR_DES_EQUIPA_V-ENDDA =
ZHR_DES_EQUIPA-ENDDA .
ZHR_DES_EQUIPA_V-BEGDA =
ZHR_DES_EQUIPA-BEGDA .
ZHR_DES_EQUIPA_V-DT_ALTERACAO =
ZHR_DES_EQUIPA-DT_ALTERACAO .
ZHR_DES_EQUIPA_V-TM_ALTERACAO =
ZHR_DES_EQUIPA-TM_ALTERACAO .
ZHR_DES_EQUIPA_V-USR_ALTERACAO =
ZHR_DES_EQUIPA-USR_ALTERACAO .
    SELECT SINGLE * FROM ZHR_DES_EQUIPA_T WHERE
CODIGO = ZHR_DES_EQUIPA-CODIGO AND
ENDDA = ZHR_DES_EQUIPA-ENDDA AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZHR_DES_EQUIPA_V-DESCRICAO =
ZHR_DES_EQUIPA_T-DESCRICAO .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZHR_DES_EQUIPA_V-DESCRICAO .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZHR_DES_EQUIPA_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZHR_DES_EQUIPA_V-CODIGO TO
ZHR_DES_EQUIPA-CODIGO .
MOVE ZHR_DES_EQUIPA_V-ENDDA TO
ZHR_DES_EQUIPA-ENDDA .
MOVE ZHR_DES_EQUIPA_V-MANDT TO
ZHR_DES_EQUIPA-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZHR_DES_EQUIPA'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZHR_DES_EQUIPA TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZHR_DES_EQUIPA'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZHR_DES_EQUIPA-CODIGO TO
ZHR_DES_EQUIPA_T-CODIGO .
MOVE ZHR_DES_EQUIPA-ENDDA TO
ZHR_DES_EQUIPA_T-ENDDA .
MOVE SY-LANGU TO
ZHR_DES_EQUIPA_T-SPRAS .
MOVE ZHR_DES_EQUIPA_V-MANDT TO
ZHR_DES_EQUIPA_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZHR_DES_EQUIPA_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZHR_DES_EQUIPA_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZHR_DES_EQUIPA_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZHR_TITULOTRAB_V................................*
FORM GET_DATA_ZHR_TITULOTRAB_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZHR_TITULOTRAB WHERE
(VIM_WHERETAB) .
    CLEAR ZHR_TITULOTRAB_V .
ZHR_TITULOTRAB_V-MANDT =
ZHR_TITULOTRAB-MANDT .
ZHR_TITULOTRAB_V-CODIGO =
ZHR_TITULOTRAB-CODIGO .
ZHR_TITULOTRAB_V-ENDDA =
ZHR_TITULOTRAB-ENDDA .
ZHR_TITULOTRAB_V-BEGDA =
ZHR_TITULOTRAB-BEGDA .
ZHR_TITULOTRAB_V-DT_ALTERACAO =
ZHR_TITULOTRAB-DT_ALTERACAO .
ZHR_TITULOTRAB_V-TM_ALTERACAO =
ZHR_TITULOTRAB-TM_ALTERACAO .
ZHR_TITULOTRAB_V-USR_ALTERACAO =
ZHR_TITULOTRAB-USR_ALTERACAO .
    SELECT SINGLE * FROM ZHR_TITULOTRAB_T WHERE
CODIGO = ZHR_TITULOTRAB-CODIGO AND
ENDDA = ZHR_TITULOTRAB-ENDDA AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZHR_TITULOTRAB_V-DESCRICAO =
ZHR_TITULOTRAB_T-DESCRICAO .
    ENDIF.
<VIM_TOTAL_STRUC> = ZHR_TITULOTRAB_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZHR_TITULOTRAB_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZHR_TITULOTRAB_V.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZHR_TITULOTRAB_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZHR_TITULOTRAB WHERE
  CODIGO = ZHR_TITULOTRAB_V-CODIGO AND
  ENDDA = ZHR_TITULOTRAB_V-ENDDA .
    IF SY-SUBRC = 0.
    DELETE ZHR_TITULOTRAB .
    ENDIF.
    DELETE FROM ZHR_TITULOTRAB_T WHERE
    CODIGO = ZHR_TITULOTRAB-CODIGO AND
    ENDDA = ZHR_TITULOTRAB-ENDDA .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZHR_TITULOTRAB WHERE
  CODIGO = ZHR_TITULOTRAB_V-CODIGO AND
  ENDDA = ZHR_TITULOTRAB_V-ENDDA .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZHR_TITULOTRAB.
    ENDIF.
ZHR_TITULOTRAB-MANDT =
ZHR_TITULOTRAB_V-MANDT .
ZHR_TITULOTRAB-CODIGO =
ZHR_TITULOTRAB_V-CODIGO .
ZHR_TITULOTRAB-ENDDA =
ZHR_TITULOTRAB_V-ENDDA .
ZHR_TITULOTRAB-BEGDA =
ZHR_TITULOTRAB_V-BEGDA .
ZHR_TITULOTRAB-DT_ALTERACAO =
ZHR_TITULOTRAB_V-DT_ALTERACAO .
ZHR_TITULOTRAB-TM_ALTERACAO =
ZHR_TITULOTRAB_V-TM_ALTERACAO .
ZHR_TITULOTRAB-USR_ALTERACAO =
ZHR_TITULOTRAB_V-USR_ALTERACAO .
    IF SY-SUBRC = 0.
    UPDATE ZHR_TITULOTRAB ##WARN_OK.
    ELSE.
    INSERT ZHR_TITULOTRAB .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZHR_TITULOTRAB_T WHERE
    CODIGO = ZHR_TITULOTRAB-CODIGO AND
    ENDDA = ZHR_TITULOTRAB-ENDDA AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZHR_TITULOTRAB_T.
ZHR_TITULOTRAB_T-CODIGO =
ZHR_TITULOTRAB-CODIGO .
ZHR_TITULOTRAB_T-ENDDA =
ZHR_TITULOTRAB-ENDDA .
ZHR_TITULOTRAB_T-SPRAS =
SY-LANGU .
      ENDIF.
ZHR_TITULOTRAB_T-DESCRICAO =
ZHR_TITULOTRAB_V-DESCRICAO .
    IF SY-SUBRC = 0.
    UPDATE ZHR_TITULOTRAB_T ##WARN_OK.
    ELSE.
    INSERT ZHR_TITULOTRAB_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZHR_TITULOTRAB_V-UPD_FLAG,
STATUS_ZHR_TITULOTRAB_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZHR_TITULOTRAB_V.
  SELECT SINGLE * FROM ZHR_TITULOTRAB WHERE
CODIGO = ZHR_TITULOTRAB_V-CODIGO AND
ENDDA = ZHR_TITULOTRAB_V-ENDDA .
ZHR_TITULOTRAB_V-MANDT =
ZHR_TITULOTRAB-MANDT .
ZHR_TITULOTRAB_V-CODIGO =
ZHR_TITULOTRAB-CODIGO .
ZHR_TITULOTRAB_V-ENDDA =
ZHR_TITULOTRAB-ENDDA .
ZHR_TITULOTRAB_V-BEGDA =
ZHR_TITULOTRAB-BEGDA .
ZHR_TITULOTRAB_V-DT_ALTERACAO =
ZHR_TITULOTRAB-DT_ALTERACAO .
ZHR_TITULOTRAB_V-TM_ALTERACAO =
ZHR_TITULOTRAB-TM_ALTERACAO .
ZHR_TITULOTRAB_V-USR_ALTERACAO =
ZHR_TITULOTRAB-USR_ALTERACAO .
    SELECT SINGLE * FROM ZHR_TITULOTRAB_T WHERE
CODIGO = ZHR_TITULOTRAB-CODIGO AND
ENDDA = ZHR_TITULOTRAB-ENDDA AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZHR_TITULOTRAB_V-DESCRICAO =
ZHR_TITULOTRAB_T-DESCRICAO .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZHR_TITULOTRAB_V-DESCRICAO .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZHR_TITULOTRAB_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZHR_TITULOTRAB_V-CODIGO TO
ZHR_TITULOTRAB-CODIGO .
MOVE ZHR_TITULOTRAB_V-ENDDA TO
ZHR_TITULOTRAB-ENDDA .
MOVE ZHR_TITULOTRAB_V-MANDT TO
ZHR_TITULOTRAB-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZHR_TITULOTRAB'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZHR_TITULOTRAB TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZHR_TITULOTRAB'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZHR_TITULOTRAB-CODIGO TO
ZHR_TITULOTRAB_T-CODIGO .
MOVE ZHR_TITULOTRAB-ENDDA TO
ZHR_TITULOTRAB_T-ENDDA .
MOVE SY-LANGU TO
ZHR_TITULOTRAB_T-SPRAS .
MOVE ZHR_TITULOTRAB_V-MANDT TO
ZHR_TITULOTRAB_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZHR_TITULOTRAB_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZHR_TITULOTRAB_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZHR_TITULOTRAB_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .
